// Code generated by protoc-gen-go-hip. DO NOT EDIT.
// versions:v1.1.11

package gen

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the mqant package it is being compiled against.
import (
	"net/http"
	"github.com/GodWY/gutil"

	"github.com/gin-gonic/gin"
)

// generated http method
func registerLoginHttpHandler(srv *gin.Engine, srvs LoginHttpHandler) {
	group := srv.Group("/api/login")
	group.GET("/helloworld/:id", srvs.GetUserName)
}

var TLogin Login

func RegisterLoginHttpHandler(srv *gin.Engine, srvs Login) {
	tmp := new(xxx_Login)
	registerLoginHttpHandler(srv, tmp)
	TLogin = srvs
}

type Login interface {
	GetUserName(ctx *gin.Context, in *Request) (out *Response, err error)
}

// generated http handle
type LoginHttpHandler interface {
	GetUserName(ctx *gin.Context)
}

type xxx_Login struct {
}

func (xx *xxx_Login) GetUserName(ctx *gin.Context) {
	req := &Request{}
	if ok := ctx.ShouldBind(req); ok != nil {
		detail := "bind request error"
		rt := gutil.RetFail(10000, detail)
		ctx.JSON(http.StatusOK, rt)
		return
	}
	rsp, err := TLogin.GetUserName(ctx, req)

	if err != nil {
		ctx.JSON(http.StatusOK, gutil.RetError(err))
		return
	}
	ctx.JSON(http.StatusOK, gutil.RetSuccess("success", rsp))
}
